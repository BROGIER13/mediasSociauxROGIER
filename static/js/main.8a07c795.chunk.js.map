{"version":3,"sources":["Components/Feed.js","Components/InstaFeeds.js","Components/AppGallery.js","Components/AppToken.js","Components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Feed","props","post","feed","id","caption","media_type","media_url","width","height","src","type","controls","playsInline","alt","title","Fragment","InstaFeeds","token","useState","feeds","setFeedsData","tokenProp","useRef","current","useEffect","abortController","AbortController","a","axios","get","limit","then","resp","data","localStorage","setItem","username","console","log","getItem","err","fetchInstagramPost","abort","className","map","AppGallery","alert","AppToken","htmlFor","name","value","selected","onClick","clear","token_update","document","getElementById","limit_update","Home","App","to","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8a07c795.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Feed = (props) => {\r\n    const { id, caption, media_type, media_url} = props.feed\r\n    let post;\r\n\r\n    switch (media_type) {\r\n        case \"VIDEO\":\r\n            post = (\r\n                <video\r\n                    width='100%'\r\n                    height='auto' \r\n                    src={media_url} \r\n                    type=\"video/mp4\" \r\n                    controls playsInline>\r\n                    title={caption}\r\n                </video>\r\n            );\r\n            break;\r\n        case \"CAROUSEL_ALBUM\":\r\n            post = (\r\n                <img \r\n                    width='100%'\r\n                    height='auto'\r\n                    id={id} \r\n                    src={media_url} \r\n                    alt={caption}\r\n                    title={caption}\r\n                />\r\n            );\r\n            break;\r\n        default:\r\n            post = (\r\n                <img \r\n                    width='100%'\r\n                    height='auto'\r\n                    id={id} \r\n                    src={media_url} \r\n                    alt={caption}\r\n                    title={caption}\r\n                />\r\n            );\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            {post}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Feed;","import React, { useState, useEffect, useRef } from 'react'\r\nimport axios from 'axios'\r\nimport Feed from './Feed'\r\nimport './instaFeeds.css'\r\n\r\nconst InstaFeeds = ({token, ...props}) => {\r\n    const [feeds, setFeedsData] = useState([]);\r\n    //use useRef to store the latest value of the prop without firing the effect\r\n    const tokenProp = useRef(token);\r\n    tokenProp.current = token;\r\n\r\n    useEffect(() => {\r\n        // this is to avoid memory leaks\r\n        const abortController = new AbortController();\r\n\r\n        async function fetchInstagramPost () {\r\n          try{\r\n            axios\r\n                .get(`https://graph.instagram.com/me/media?fields=id,media_type,media_url,caption,username&limit=${props.limit}&access_token=${tokenProp.current}`)\r\n                .then((resp) => {\r\n                    setFeedsData(resp.data.data)\r\n                    localStorage.setItem('newUsername', resp.data.data[0].username);\r\n                    console.log(localStorage.getItem('newUsername'));\r\n                })\r\n          } catch (err) {\r\n              console.log('error', err)\r\n          }\r\n\r\n        }\r\n\r\n        // manually call the fecth function\r\n        fetchInstagramPost();\r\n\r\n        return () => {\r\n            // cancel pending fetch request on component unmount\r\n            abortController.abort(); \r\n        };\r\n    }, [props.limit])\r\n\r\n    return (\r\n        <>\r\n            <h3>Bienvenue sur le profil de {localStorage.getItem('newUsername')}</h3>\r\n            <h5>Voici ces {props.limit} derniers posts</h5>\r\n            <div className=\"container\">\r\n                {feeds.map((feed) => (\r\n                    <Feed key={feed.id} feed={feed} />\r\n                ))}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default InstaFeeds;","import React from 'react'\r\nimport InstaFeeds from './InstaFeeds'\r\n\r\nlet AppGallery = () => {\r\n    if(localStorage.getItem('newToken') == null){\r\n        alert(\"Aucun token envoyé\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <InstaFeeds token={localStorage.getItem('newToken')} limit={localStorage.getItem('newLimit')}/>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default AppGallery;","import React from 'react'\r\n\r\nlet AppToken = () => {\r\n    function update() {\r\n        localStorage.clear();\r\n        let token_update = document.getElementById(\"token\").value;\r\n        let limit_update = document.getElementById(\"limit\").value;\r\n        localStorage.setItem('newToken', token_update);\r\n        localStorage.setItem('newLimit', limit_update);\r\n        console.log(token_update);\r\n        console.log(limit_update);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n            <div className=\"boxtoken\">\r\n                <p>\r\n                    <label htmlFor=\"token\">Saisir son token d'accès :  </label>\r\n                    <input type=\"text\" id=\"token\" name=\"token\"/>\r\n                </p>\r\n                <p>\r\n                    <label htmlFor=\"limit\">Choisir le nombre de post à afficher :  </label>\r\n                    <select name=\"limit\" id=\"limit\">\r\n                        <option value=\"10\">10</option>\r\n                        <option value=\"25\">25</option>\r\n                        <option value=\"50\" selected>50</option>\r\n                        <option value=\"75\">75</option>\r\n                        <option value=\"100\">100</option>\r\n                        <option value=\"125\">125</option>\r\n                        <option value=\"150\">150</option>\r\n                    </select>\r\n                </p>\r\n\r\n                <button onClick={update}>Valider les données</button>\r\n\r\n            </div>\r\n            </div>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AppToken;","import React from 'react'\r\n\r\nlet Home = () => {\r\n    return (\r\n        <>\r\n            <div className=\"boxhome\">\r\n                <h2>\r\n                    Vous voulez avoir la galerie photo d'un compte Instagram, vous êtes sur le bon site !\r\n                </h2>\r\n                <p>\r\n                    STEP 1 : Renseignez le token d'accès du compte Instagram ainsi que le nombre de posts que vous souhaitez visualiser ;\r\n                </p>\r\n                <p>\r\n                    STEP 2 : Rendez vous maintenant sur la page Affichage de la galerie pour profiter des photos Insta;\r\n                </p>\r\n                <p>\r\n                    STEP 3 : Effectuez les étapes à l'infini tant que vous disposez d'autres token d'accès.\r\n                </p>\r\n            </div>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react'\r\nimport './App.css';\r\nimport AppGallery from \"./Components/AppGallery\";\r\nimport AppToken from \"./Components/AppToken\";\r\nimport Home from \"./Components/Home\";\r\nimport { Route, Link, BrowserRouter as Router} from \"react-router-dom\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <>\r\n            <header>\r\n                <h1>Création de mon application avec l'API Basic Display</h1>\r\n            </header>\r\n            <Router>\r\n                <div>\r\n                    <hr/>\r\n                    <ul>\r\n                        <li>\r\n                            <Link className={\"link\"} to=\"/\">Accueil</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link className={\"link\"} to=\"/token\">Choix du token</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link className={\"link\"} to=\"/gallery\">Affichage de la galerie</Link>\r\n                        </li>\r\n                    </ul>\r\n                    <hr/>\r\n                        <Route exact path=\"/\" component={Home} />\r\n                        <Route path=\"/token\" component={AppToken} />\r\n                        <Route path=\"/gallery\" component={AppGallery} />\r\n                </div>\r\n            </Router>\r\n            <footer>\r\n                Projet final de Médias Sociaux et Big Data - ROGIER Bastien - 5A Alternant 2020/2021\r\n                <p>\r\n                    CopyRight © BR\r\n                </p>\r\n            </footer>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}